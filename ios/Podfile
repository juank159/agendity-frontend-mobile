# Uncomment this line to define a global platform for your project
platform :ios, '13.0'

# Especifica la versión exacta de Firebase
$FirebaseSDKVersion = '10.22.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

flutter_ios_podfile_setup

target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
    
    # Aplicar todas estas configuraciones a todos los targets para resolver problemas de Firebase
    target.build_configurations.each do |config|
      # Deshabilitar BitCode
      config.build_settings['ENABLE_BITCODE'] = 'NO'
      
      # Permitir inclusiones no modulares (CLAVE para resolver el error)
      config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
      
      # Ignorar errores específicos (IMPORTANTE)
      config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-error=non-modular-include-in-framework-module -Wno-error=incomplete-umbrella -Wno-error=undeclared-selector -Wno-error=atomic-property-with-user-defined-accessor -Wno-error=objc-protocol-method-implementation'
      
      # Configuraciones para permisos
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= [
        '$(inherited)',
        'PERMISSION_NOTIFICATIONS=1',
        'COCOAPODS=1',
        'FORCE_STATIC=1',
        'FIR_SWIFT_NAME=1',
        'GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS=1',
      ]
      
      # Para iOS 13+
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
      
      # Propiedades adicionales para resolver problemas de compilación
      config.build_settings['APPLICATION_EXTENSION_API_ONLY'] = 'NO'
      
      # Configuración especial para Swift
      config.build_settings['SWIFT_VERSION'] = '5.0'
      
      # Asegurarse de que los módulos estén definidos
      config.build_settings['DEFINES_MODULE'] = 'YES'
      
      # Incluir todos los símbolos
      config.build_settings['GCC_SYMBOLS_PRIVATE_EXTERN'] = 'NO'
      
      # Esto es crítico para resolver problemas con header search paths
      config.build_settings['HEADER_SEARCH_PATHS'] ||= ['$(inherited)']
      config.build_settings['HEADER_SEARCH_PATHS'] << "${PODS_ROOT}/Firebase/CoreOnly/Sources"
    end
  end
end